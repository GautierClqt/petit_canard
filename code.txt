var vie, angle, angle_scan, ennemy, i;

//définit la valeur de var angle en fonction de la position de Donald
function flee()
{
  if(getX() <= 10)
  {
    angle = (Math.random() * 180) - 90;
    while (getY() >= 10 && getY() <= 90 && getX() <= 90)
    {
      swim(angle, 100);
    }
    stop();
  }
  else if(getX() >= 90)
  {
    angle = (Math.random() * 180) + 90;
    while (getY() >= 10 && getY() <= 90 && getX() >= 10)
    {
      swim(angle, 100);
    }
    stop();
  }
  else if(getY() <= 10)
  {
    angle = (Math.random() * 180);
    while (getY() <= 90 && getX() >= 10 && getX() <= 90)
    {
      swim(angle, 100);
    }
    stop();
  }
  else if(getY() >= 90)
  {
    angle = (Math.random() * -180);
    while (getY() >= 10 && getX() >= 10 && getX() <= 90)
    {
      swim(angle, 100);
    }
    stop();
  }
  else
  {
    angle = (Math.random() * 360);
    while (getY() >= 10 && getY() <= 90 && getX() >= 10 && getX() <= 90)
    {
      swim(angle, 100);
    }
    stop();
  }
}

//comportement offensif de Donald
function attack()
{
  angle_scan = angle_scan + 3;
  ennemi = scan(angle_scan);
  if (ennemi != Infinity)
  {
    angle_scan = angle_scan - 4;
    swim(angle_scan, 50);
    cannon (angle_scan, 5);
  }
}

//test
vie = 100;
angle_scan = 0;
i = 0;

while (true) 
{
  if (health() < vie && health() < 50) //si vie actuelle < que vie stockée
  {
    flee(); //appeler la function flee()
    vie = health();
  }
  else
  {
    attack();
  }
}
